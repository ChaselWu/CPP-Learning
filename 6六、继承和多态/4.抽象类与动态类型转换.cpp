//1.访问控制（可见性控制）
/*
    1）private
        私有成员只有类内的函数可以访问
    2）public
        共有成员可悲任何其他类访问
    3）protected
        保护数据或函数可被派生类访问
*/

//2.抽象类与纯虚函数
/*
    1）抽象类
        类太抽象以至于无法实例化就叫做抽象类
    2）抽象函数/纯虚函数
        virtual void f()=0;//在基类中
        抽象函数要求其子类必须实现它
    3）也可以说：包含抽象函数的类被称为抽象类，抽象类不能实例化
*/

//3.动态类型转换
/*
    1）dynamic_cast
    2）作用：沿继承层级向上、向下、向侧转换到类的指针和引用
    3）转指针失败：返回nullptr
    4）转引用失败：抛异常
*/

//4.向上转换和向下转换
/*
    1）上转（子->父）可使用隐式转换
    2）下转必须显示执行
    3）注：
        可将派生类对象截断，只是用继承来的信息
        但不可将基类对象拉长，无中生有变出派生类对象
*/

//5.typeid运行时查询类型的信息
/*
    1）typeid运算符
        用于获取对象所属的类的信息
        typeid(TypeName);//返回一个type_info对象的引用
        typeid(TypeName).name;//返回实现定义的，含有类型名称的C风格字符串char*
    2）auto& t1=typeid(o);
*/