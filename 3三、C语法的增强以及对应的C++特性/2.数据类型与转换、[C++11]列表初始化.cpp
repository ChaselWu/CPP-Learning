//1.Boolean Data Type
/*
    1)布尔类型的定义
    2)用途：主要与条件语句相关。条件语句用来更改程序控制流。
    3)C++中的bool类型
    4)布尔类型与int的转换：
        0<->false true->1 non-zero->true
    5)关系运算得到布尔值（== != <= >=)
    6)逻辑运算得到布尔值（&& || ！）
    7)代码示例
    8)编码规范:
        26.bool变量/函数的命名应使用前缀（is）(或者是has can should)
        39.断行必须很明显。在逗号或者运算符后换行，新行要对齐
        *判等以后可以使用（3==a），而不使用（a==3）
    9)std::boolalpha函数
*/

//2.列表初始化
/*
    1)before C++11
        int x=2;int y{0};

    2)list initialization
        2.1)列表初始化是C++的一个新特性
        2.2)列表是用花括号括起来的一（些）值
        2.3)分类：
            直接列表初始化 & 拷贝列表初始化

            直接列表初始化的例子：
            int x{};//x=0

            拷贝列表初始化的例子：
            int z ={2}; int array[]={4,5,6};
            char s1[]={'y','e','s'};
            char s2[]={"World"};
            char s3[]="Aloha"//省略了花括号

    3)何时使用列表初始化：
        3.1)列表初始化被称为“统一初始化方法”
        3.2)何时使用仍有争论
        3.3)一种观点：
            尽量使用列表初始化，除非有个很好的不用它的理由
            因为列表初始化不允许“窄化”，即不允许丢失数据精度的隐式类型替换
*/

//3.Type Conversion
/*
    1)类型转换的分类：
        1.1）隐式类型转换：
            编译器按照数据类型的转换规则自动转换，无需程序员干预
            可能导致数据精度丢失或者转换失败
            应尽量避免使用隐式类型转换
        1.2)显式类型转换：
            程序员用明确的类型转换语法写出类型转换代码
            好处是，程序员知道自己要做什么并且把这个想法明确表达出来

    2)C风格强制类型转换：
        语法：(type)value || type(value)

    3)C++风格强制类型转换：
        语法：static_cast<type>value
        注意：static_cast<int>(1/2)
            !=static_cast<int>(1)/2

    4)Coding Convention:
        45.类型转换必须显示声明，永远不要依赖显式类型转换
*/