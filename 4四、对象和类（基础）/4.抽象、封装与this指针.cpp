//1.封装
/*
    1）数据域封装
        数据域采用public的形式会有两个问题：
            数据会被类外的方法篡改
            使得类难以维护，易出现bug
    2）访问器与更改器
        为读取私有数据，需要get/set函数：
            2.1）getter即accessor，一般包括：
                <type> getPropertyName();
                bool isPropertyName();
            2.2）setter即mutator，一般为：
                void setPropertyName(<type> property);
*/

//2.类抽象与封装
/*
    1）类抽象：
        在研究对象或系统时，为了更加专注于感兴趣的细节，去除对象或系统的物理或时空细节/属性的过程叫做抽象
    2）类封装：
        是一种限制直接访问对象组成部分的语言机制
        是一种事项数据和函数绑定的语言构造块
*/

//3.成员作用域与this指针
/*
    1）数据成员作用域：
        数据成员可被类中所有函数访问
        数据域与函数可以按顺序任意声明（privat与public的顺序不影响）
    2）同名屏蔽：
        2.1）若成员函数中的局部变量与某数据域同名：
            由就近原则知局部变量的优先级更高，这就导致同名数据域在该函数中被屏蔽
        2.2）因此，不要在类中多次声明同名变量，以免混淆
            编码规范：若类的成员函数参数与私有成员变量名相同，那么参数名应加下划线后缀
    3）this指针
        如果想访问类中被屏蔽的数据域，可以使用this关键字。
        是一种特殊的内建指针并将引用当前函数的调用对象
*/